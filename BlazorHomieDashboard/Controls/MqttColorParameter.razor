<RadzenCard>
    <div>
        <h4>@Data.Caption</h4>
        <div style="background-color: rgb(@Data.ActualValue)">
            <a href="javascript:;" @onclick="Edit">
                <h2 class="text-center" hidden="@_isEditting">@Data.ActualValue</h2>
            </a>
        </div>
    </div>

    <div class="input-group justify-content-center" hidden="@(!_isEditting)">
        <RadzenColorPicker @bind-Value=@_colorPickerValue ShowHSV=true ShowRGBA=true ShowColors=true ShowButton=true Change="@SetNewColor"/>
    </div>

</RadzenCard>

@code {

    [Parameter]
    public MqttColorParameterData Data { get; set; }

    private bool _isEditting;
    private string _colorPickerValue;


    private void Edit() {
        _colorPickerValue = $"rgb({Data.TargetValue})";
        _isEditting = !_isEditting;
        StateHasChanged();
    }

    private void SetNewColor() {
        // Cleaning up according ot hommie convention

        var targetColor = _colorPickerValue;

        if (targetColor.StartsWith("rgb(")) {
            targetColor = targetColor.Replace("rgb(", "");
            targetColor = targetColor.Replace(")", "");
        } else if (targetColor.StartsWith("rgba(")) {
            targetColor = targetColor.Replace("rgba(", "");
            targetColor = targetColor.Replace(")", "");

            var splits = targetColor.Split(",");
            targetColor = $"{splits[0]},{splits[1]},{splits[2]}";
        }

        targetColor = targetColor.Replace(" ", "");

        Data.TargetValue = targetColor;
        Data.SetTargetValue();
        _isEditting = false;
    }

}